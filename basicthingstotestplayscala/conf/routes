# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~


#Trello Routing

#Board Requests
GET     /                           controllers.BoardController.test

GET     /boards                     controllers.BoardController.allUserBoards
POST    /boards                     controllers.BoardController.createNewBoard
GET     /board/:id                  controllers.BoardController.findBoardById(id : String)
PUT     /board/:id                  controllers.BoardController.updateBoard(id : String)
DELETE  /board/:id                  controllers.BoardController.deleteBoard(id : String)
PUT     /board/:id/addMember        controllers.BoardController.addMemberToBoard(id: String)
PUT     /board/:id/deleteMember     controllers.BoardController.deleteMemberFromBoard(id: String)
PUT     /board/:id/updateLabel      controllers.BoardController.changeLabelOfBoard(id: String)

#List Request
GET     /lists                      controllers.TasksListController.allListTasks
POST    /lists                      controllers.TasksListController.createNewListTask
GET     /list/:id                   controllers.TasksListController.findListTaskById(id : String)
PUT     /list/:id                   controllers.TasksListController.updateListTask(id : String)
DELETE  /list/:id                   controllers.TasksListController.deleteListTask(id : String)
PUT     /list/:id/addMember         controllers.TasksListController.addMemberToList(id: String)
PUT     /list/:id/deleteMember      controllers.TasksListController.deleteMemberFromList(id: String)
PUT     /list/:id/updateLabel       controllers.TasksListController.changeLabelOfTasksList(id: String)

#Task Request
GET     /tasks                      controllers.TaskController.allTasks
POST    /tasks                      controllers.TaskController.createNewTask
GET     /task/:id                   controllers.TaskController.findTaskById(id : String)
PUT     /task/:id                   controllers.TaskController.updateTask(id : String)
PUT     /task/:id/archive           controllers.TaskController.archiveTask(id : String)
DELETE  /task/:id                   controllers.TaskController.deleteTask(id : String)
PUT     /task/:id/addMember         controllers.TaskController.addMemberToTask(id: String)
PUT     /task/:id/deleteMember      controllers.TaskController.deleteMemberFromTask(id: String)
PUT     /task/:id/updateListId      controllers.TaskController.changeParentListOfTask(id: String)
PUT     /task/:id/updateLabel       controllers.TaskController.changeLabelOfTask(id: String)
PUT     /task/:id/updateDescription controllers.TaskController.changeDescriptionOfTask(id: String)


#Member Request
GET     /members                    controllers.MemberController.allMembers
POST    /members                    controllers.MemberController.createNewMember
GET     /member/:username           controllers.MemberController.findMemberById(username : String)
PUT     /member/:username           controllers.MemberController.updateMember(username : String)
DELETE  /member/:username           controllers.MemberController.deleteMember(username : String)
POST    /members/auth               controllers.MemberController.authMember


#Schemas
GET     /schema/createBoard         controllers.Schemas.createBoardSchema
GET     /schema/updateBoard         controllers.Schemas.updateBoardSchema
GET     /schema/addDeleteMember     controllers.Schemas.addDeleteMemberSchema
GET     /schema/updateLabel         controllers.Schemas.updateLabelSchema
GET     /schema/updateDescription   controllers.Schemas.descriptionUpdateSchema
GET     /schema/createList          controllers.Schemas.createListSchema
GET     /schema/createTask          controllers.Schemas.createTaskSchema
GET     /schema/changeList          controllers.Schemas.listIdOfTaskUpdateSchema
GET     /schema/updatePassword      controllers.Schemas.updatePasswordMemberSchema
GET     /schema/auth                controllers.Schemas.authSchema
GET     /schema/archiveOrRestore    controllers.Schemas.archiveOrRestoreSchema
GET     /schema/updateTask    controllers.Schemas.updateTaskSchema

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
